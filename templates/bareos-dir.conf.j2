# {{ ansible_managed }}

#
# Default Bareos Director configuration file for disk-only backup
# (C) 2013-2014 Bareos GmbH & Co.KG
#
# Each configuration item has a reference number that shows
# where this property can be changed in the configuration file.
# Search for the number to find the correct line.
#
# You have to configure the following accoring to your environment:
#
# (#01)Email Address for bareos disaster recovery.
#      Specify a mailaddress outside of your backupserver.
#      There will be one mail per day.
#
# (#02)Email Address for bareos reports. (Mail Command)
#      This mail address will recieve a report about each backup job.
#      It will be sent after the backupjob is complete.
#      Has to be configured twice ("Standard" and "Daemon" Message Ressources)
#
# (#03)Email Address for bareos operator. (Operator Command)
#      This mail address will recieve a mail immediately when the
#      bareos system needs an operator intervention.
#      May be the same address as in (#02)
#
#
# This disk-only setup stores all data into /var/lib/bareos/storage
#
# The preconfigured backup scheme is as follows:
#
#   Full Backups are done on first Saturday at 21:00              (#04)
#   Full Backups are written into the "Full" Pool                 (#05)
#   Full Backups are kept for 365 Days                            (#06)
#
#   Differential Backups are done on 2nd to 5th Saturday at 21:00 (#07)
#   Differential Backups are written into the "Differential" Pool (#08)
#   Differential Backups are kept for 90 Days                     (#09)
#
#   Incremental Backups are done monday to friday at 21:00        (#10)
#   Incremental Backups are written into the "Incremental" Pool   (#11)
#   Incremental Backups are kept for 30 Days                      (#12)
#
#   What you also have to do is to change the default fileset     (#13)
#   to either one of the demo filesets given or create our own fileset.
#
#
#
#  For Bareos release 14.2.2 (12 December 2014) -- ubuntu Ubuntu 14.04 LTS
#
#
Director {                            # define myself
  Name = {{ bareos_server_director_name }}
  QueryFile = "{{ bareos_server_director_query_file }}"
  Maximum Concurrent Jobs = {{ bareos_server_director_maximum_concurrent_jobs }}
  Password = "{{ bareos_server_director_password }}"         # Console password
  Messages = {{ bareos_server_director_messages }}
  Auditing = {{ bareos_server_director_auditing }}

  # remove comment in next line to load dynamic backends from specified directory
  # Backend Directory = /usr/lib/bareos/backends

  # remove comment from "Plugin Directory" to load plugins from specified directory.
  # if "Plugin Names" is defined, only the specified plugins will be loaded,
  # otherwise all director plugins (*-dir.so) from the "Plugin Directory".
  #
  # Plugin Directory = /usr/lib/bareos/plugins
  # Plugin Names = ""
}

JobDefs {
  Name = "{{ bareos_server_jobdefs_name }}"
  Type = {{ bareos_server_jobdefs_type }}
  Level = {{ bareos_server_jobdefs_level }}
  Client = {{ bareos_server_jobdefs_client }}
  FileSet = "{{ bareos_server_jobdefs_fileset }}"                     # selftest fileset                            (#13)
  Schedule = "{{ bareos_server_jobdefs_schedule }}"
  Storage = {{ bareos_server_jobdefs_storage }}
  Messages = {{ bareos_server_jobdefs_messages }}
  Pool = {{ bareos_server_jobdefs_pool }}
  Priority = {{ bareos_server_jobdefs_priority }}
  Write Bootstrap = "{{ bareos_server_jobdefs_write_bootstrap }}"
  Full Backup Pool = {{ bareos_server_jobdefs_full_backup_pool }}                  # write Full Backups into "Full" Pool         (#05)
  Differential Backup Pool = {{ bareos_server_jobdefs_differential_backup_pool }}  # write Diff Backups into "Differential" Pool (#08)
  Incremental Backup Pool = {{ bareos_server_jobdefs_incremental_backup_pool }}    # write Incr Backups into "Incremental" Pool  (#11)
}

{% for job in bareos_server_jobs %}
Job {
  {% for item, value in job.iteritems() -%}
    {{ item }} = {{ value }}
  {% endfor %}
}

{% endfor -%}

FileSet {
  Name = "Windows All Drives"
  Enable VSS = yes
  Include {
    Options {
      Signature = MD5
      Drive Type = fixed
      IgnoreCase = yes
      WildFile = "[A-Z]:/pagefile.sys"
      WildDir = "[A-Z]:/RECYCLER"
      WildDir = "[A-Z]:/$RECYCLE.BIN"
      WildDir = "[A-Z]:/System Volume Information"
      Exclude = yes
    }
    File = /
  }
}


FileSet {
  Name = "Linux All"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
      One FS = No     # change into other filessytems
      FS Type = ext2  # filesystems of given types will be backed up
      FS Type = ext3  # others will be ignored
      FS Type = ext4
      FS Type = xfs
      FS Type = reiserfs
      FS Type = jfs
      FS Type = btrfs
    }
    File = /
  }
  # Things that usually have to be excluded
  # You have to exclude /var/lib/bareos/storage
  # on your bareos server
  Exclude {
    File = /var/lib/bareos
    File = /var/lib/bareos/storage
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }

}

# fileset just to backup some files for selftest
FileSet {
  Name = "SelfTest"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
    }
    File = "/usr/sbin"
  }
}

Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sat at 21:00                   # (#04)
  Run = Differential 2nd-5th sat at 21:00       # (#07)
  Run = Incremental mon-fri at 21:00            # (#10)
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full mon-fri at 21:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/lib/bareos/bareos.sql" # database dump
    File = "/etc/bareos"                # configuration
  }
}

# Client (File Services) to backup
Client {
  Name = localhost-fd
  Address = localhost
  Password = "hfWp9KfZ2OY8BlG9LLDT4wPjgY8yKKfaoXpxWsKrdKd1"          # password for FileDaemon
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = no                      # Prune expired Jobs/Files
}

#
# Definition of file storage device
#
Storage {
  Name = File
# Do not use "localhost" here
  Address = localhost                # N.B. Use a fully qualified name here
  Password = "n6YWZmhv7Upo3vYE5CQFRDge5L30cLXfEF3ztHoXRi14"
  Device = FileStorage
  Media Type = File
}

#
# Generic catalog service
#
Catalog {
  Name = MyCatalog
  # Uncomment the following lines if you want the dbi driver
  # dbdriver = "dbi:postgresql"; dbaddress = 127.0.0.1; dbport =
  #dbdriver = "postgresql"
  dbdriver = "postgresql"
  dbname = "bareos"
  dbuser = "bareos"
  dbpassword = ""
}

#
# Reasonable message delivery -- send most everything to email address and to the console
#
Messages {
  Name = Standard
  mailcommand = "/usr/bin/bsmtp -h localhost -f \"\(Bareos\) \<%r\>\" -s \"Bareos: %t %e of %c %l\" %r"
  operatorcommand = "/usr/bin/bsmtp -h localhost -f \"\(Bareos\) \<%r\>\" -s \"Bareos: Intervention needed for %j\" %r"
  mail = root@localhost = all, !skipped, !audit # (#02)
  operator = root@localhost = mount     # (#03)
  console = all, !skipped, !saved, !audit
  append = "/var/log/bareos/bareos.log" = all, !skipped, !audit
  catalog = all, !audit
}

#
# Message delivery for daemon messages (no job).
#
Messages {
  Name = Daemon
  mailcommand = "/usr/bin/bsmtp -h localhost -f \"\(Bareos\) \<%r\>\" -s \"Bareos daemon message\" %r"
  mail = root@localhost = all, !skipped, !audit # (#02)
  console = all, !skipped, !saved, !audit
  append = "/var/log/bareos/bareos.log" = all, !skipped, !audit
  append = "/var/log/bareos/bareos-audit.log" = audit
}

#
# Full Pool definition
#
Pool {
  Name = Full
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # How long should the Full Backups be kept? (#06)
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Full-"              # Volumes will be labeled "Full-<volume-id>"
}

#
# Differential Pool definition
#
Pool {
  Name = Differential
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 90 days          # How long should the Differential Backups be kept? (#09)
  Maximum Volume Bytes = 10G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Differential-"      # Volumes will be labeled "Differential-<volume-id>"
}

#
# Incremental Pool definition
#
Pool {
  Name = Incremental
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 30 days          # How long should the Incremental Backups be kept?  (#12)
  Maximum Volume Bytes = 1G           # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Incremental-"       # Volumes will be labeled "Incremental-<volume-id>"
}

#
# Scratch pool definition
#
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = localhost-mon
  Password = "IB6P6mjjf8JfRRjtu4k38W7GfOnXbdM21v2YKIhNgZLQ"
  CommandACL = status, .status
  JobACL = *all*
}
